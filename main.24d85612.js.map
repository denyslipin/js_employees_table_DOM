{"version":3,"sources":["scripts/main.js"],"names":["checkIndex","table","document","querySelector","tableHead","tableBody","tableRows","rows","count","addEventListener","e","i","target","cellIndex","sort","a","b","first","cells","innerText","second","slice","replace","localeCompare","append","targetRow","closest","classList","remove","className","pushNotification","title","description","type","insertAdjacentHTML","setTimeout","form","preventDefault","formData","FormData","data","Object","fromEntries","entries","name","length","age","position","office","parseInt","salary","toLocaleString","reset","cell","oldValue","textContent","input","firstElementChild","errorInputCase","successInputCase","value","handler","isNaN","focus","ev","key"],"mappings":"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","file":"main.24d85612.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst tableRows = [...tableBody.rows];\nlet checkIndex;\nlet count = 0;\n\ntableHead.addEventListener('click', e => {\n  const i = e.target.cellIndex;\n\n  if (checkIndex === e.target.cellIndex) {\n    count++;\n  } else {\n    count = 0;\n  }\n\n  tableRows.sort((a, b) => {\n    let first = a.cells[i].innerText;\n    let second = b.cells[i].innerText;\n\n    if (i === 4) {\n      first = +first.slice(1).replace(',', '');\n      second = +second.slice(1).replace(',', '');\n\n      return count % 2 === 0\n        ? first - second\n        : second - first;\n    }\n\n    return count % 2 === 0\n      ? first.localeCompare(second)\n      : second.localeCompare(first);\n  });\n\n  tableBody.append(...tableRows);\n\n  checkIndex = i;\n});\n\ntableBody.addEventListener('click', e => {\n  const targetRow = e.target.closest('tr');\n\n  for (const row of tableBody.rows) {\n    row.classList.remove('active');\n  }\n\n  targetRow.className = 'active';\n});\n\nconst pushNotification = (title, description, type) => {\n  const body = document.querySelector('body');\n\n  body.insertAdjacentHTML('beforeend', `\n    <div class=\"${type} notification\" data-qa=\"notification\">\n      <h1 class=\"title\">${title}</h1>\n      <p>${description}</p>\n    </div>\n  `);\n\n  setTimeout(() => document.querySelector('div').remove(), 3000);\n};\n\ntable.insertAdjacentHTML('afterend', `\n  <form class='new-employee-form'>\n    <label>Name:\n      <input name=\"name\" type=\"text\" data-qa=\"name\" required>\n    </label>\n    <label>Position:\n      <input name=\"position\" type=\"text\" data-qa=\"position\" required>\n    </label>\n    <label>Office:\n      <select name=\"office\" data-qa=\"office\" required>\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age:\n      <input name=\"age\" type=\"number\" data-qa=\"age\" required>\n    </label>\n    <label>Salary:\n      <input name=\"salary\" type=\"number\" data-qa=\"salary\" required>\n    </label>\n    <button>Save to table</buttom>\n  </form>\n`);\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const formData = new FormData(form);\n  const data = Object.fromEntries(formData.entries());\n\n  if (data.name.length < 4) {\n    pushNotification('Error message', 'Incorrect name', 'error');\n  } else if (+data.age < 18 || +data.age > 90) {\n    pushNotification('Error message', 'Incorrect age', 'error');\n  } else {\n    tableBody.insertAdjacentHTML('beforeend', `\n      <tr>\n        <td>${data.name}</th>\n        <td>${data.position}</th>\n        <td>${data.office}</th>\n        <td>${data.age}</th>\n        <td>$${parseInt(data.salary).toLocaleString('en-US')}</th>\n      </tr>\n    `);\n\n    pushNotification(\n      'Success message',\n      'A new employee is successfully added to the table',\n      'success'\n    );\n  }\n\n  form.reset();\n});\n\ntableBody.addEventListener('dblclick', e => {\n  const cell = e.target;\n  const oldValue = cell.textContent;\n\n  cell.textContent = '';\n\n  cell.insertAdjacentHTML('afterbegin', `\n      <label>\n        <input class=\"cell-input\" name=\"text\" type=\"text\">\n      </label>\n    `);\n\n  const input = cell.firstElementChild.firstElementChild;\n\n  input.focus();\n\n  function errorInputCase(description) {\n    cell.textContent = oldValue;\n    pushNotification('Error message', `${description}`, 'error');\n  }\n\n  function successInputCase(value, description) {\n    cell.textContent = value;\n    pushNotification('Success message', `${description}`, 'success');\n  }\n\n  function handler() {\n    if (input.value.length === 0) {\n      errorInputCase('Empty value');\n\n      return;\n    }\n\n    if (cell.cellIndex === 0) {\n      if (input.value.length < 4) {\n        errorInputCase('Incorrect name');\n      } else {\n        successInputCase(input.value, 'Name added');\n      }\n\n      return;\n    }\n\n    if (cell.cellIndex === 3) {\n      if (isNaN(+input.value) || +input.value < 18 || +input.value > 90) {\n        errorInputCase('Incorrect age');\n      } else {\n        successInputCase(input.value, 'Age added');\n      }\n\n      return;\n    }\n\n    if (cell.cellIndex === 4) {\n      if (isNaN(+input.value)) {\n        errorInputCase('Incorrect salary');\n      } else {\n        const salary = `$${parseInt(input.value).toLocaleString('en-US')}`;\n\n        successInputCase(salary, 'Salary added');\n      }\n\n      return;\n    }\n\n    successInputCase(input.value, 'Value added');\n  };\n\n  input.addEventListener('keydown', ev => {\n    if (ev.key === 'Enter') {\n      handler();\n    }\n  });\n\n  input.addEventListener('blur', () => {\n    handler();\n  });\n});\n"]}